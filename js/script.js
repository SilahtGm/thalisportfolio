const slide = document.querySelector('.carousel-slide');
const prevBtn = document.querySelector('.prev');
const nextBtn = document.querySelector('.next');
const tituloEl = document.querySelector('.descricao-projeto h3');
const descricaoEl = document.querySelector('.descricao-projeto p');
const backToTop = document.getElementById('backToTop');

const projetos = [
  {
    titulo: "üöÄ Challenge Swift ‚Äì Gamifica√ß√£o",
    descricao: `Em maio de 2025, participei do Challenge da FIAP em parceria com a Swift, voltado √† cria√ß√£o de uma solu√ß√£o gamificada para engajar colaboradores.
    Eu e meu grupo desenvolvemos o Swift Farmer, um projeto de uma plataforma com trilha de progress√£o baseada em vendas, ranking de desempenho, recompensas, miss√µes e muito mais. Tudo pensado para impulsionar a motiva√ß√£o, o desempenho e a experi√™ncia no ambiente corporativo.
    <br>A entrega envolveu:<br>‚úî Diagn√≥stico do problema
    <br>‚úî MER
    <br>‚úî Prot√≥tipo das telas em Figma
    <br>Nas imagens anexadas, compartilho alguns dashboards que desenvolvemos.`,
    imagens: [
      "./img/Login.jpg",
      "./img/Dash.png",
      "./img/Minha Trilha.png",
      "./img/Recompensas.png",
      "./img/Miss√µes.png"
    ]
  },
  {
    titulo: "üåç Global Solutions ‚Äì Projeto Pluvius",
    descricao: `No m√™s de junho, tive a oportunidade de participar de mais um desafio da FIAP, o Global Solutions. 
    Um desafio em grupo que tinha como objetivo criar solu√ß√µes tecnol√≥gicas para lidar com eventos clim√°ticos extremos.
    A nossa proposta foi o "Pluvius", uma plataforma web voltada ao monitoramento clim√°tico, com foco em previs√µes atualizadas, alertas de risco, mapas interativos e dashboards informativos. A solu√ß√£o foi pensada para ajudar tanto a popula√ß√£o quanto √≥rg√£os p√∫blicos a se prepararem melhor diante de situa√ß√µes como enchentes e tempestades.<br>
    Nosso projeto contou com:<br>
    ‚úÖ An√°lise do problema<br>
    ‚úÖ Prot√≥tipo visual criado no Figma<br>
    ‚úÖ Dashboard com dados clim√°ticos e alertas<br>
    ‚úÖ Modelagem l√≥gica e f√≠sica dos dados<br>
    Abaixo, apresento algumas telas que desenvolvemos.`,
    imagens: [
      "./img/LoginP.png",
      "./img/InicioP.png",
      "./img/MapaP.png"
    ]
  },
  {
    titulo: "üìã C√°lculo de Comiss√£o com B√¥nus - Java ",
    descricao: `Ol√° a todos, neste projeto que eu desenvolvi para o curso t√©cnico da Etec, utilizando Java.<br>
    O programa realiza o c√°lculo da comiss√£o de vendas, adicionando um b√¥nus extra quando a meta de quantidade √© ultrapassada.<br>
    O usu√°rio informa o valor total vendido e a quantidade de vendas realizadas, e o sistema retorna o valor da comiss√£o com ou sem b√¥nus.<br>
    Esse exerc√≠cio ajudou a praticar estruturas de controle (if, while), opera√ß√µes matem√°ticas e intera√ß√£o com o console.<br>
    üìå Tecnologias: Java, NetBeans IDE`,
    imagens: [
      "./img/Execu√ß√£oDoJava.png",
      "./img/Captura de tela 2025-07-02 231543.png"
    ]
  },
  {
    titulo: "üöÄ Sistema Java de pagamento de IPVA.",
    descricao: `Ol√° a todos, este meu projeto foi desenvolvido durante minhas aulas na ETEC no m√≥dulo de Desenvolvimento de Sistemas.
 Utilizei a linguagem Java e a estrutura switch case para criar uma l√≥gica que informa ao usu√°rio a data correta para pagamento do IPVA de acordo com o final da placa do ve√≠culo.<br>`,
    imagens: [
      "./img/Execu√ß√£oDoJavaAgenda7.png"
    ]
  }
];

let projetoIndex = 0;
let slideIndex = 0; // √≠ndice da imagem dentro do projeto
let isAnimating = false;

// Fun√ß√£o que carrega as imagens no slide para o projeto atual
function carregarImagensProjeto() {
  const imagens = projetos[projetoIndex].imagens;
  slide.innerHTML = imagens
    .map(
      (src, i) =>
        `<img src="${src}" alt="Imagem ${i + 1} do projeto" draggable="false" />`
    )
    .join('');
  slide.style.transform = 'translateX(0)';
  slideIndex = 0;
}

// Atualiza t√≠tulo e descri√ß√£o do projeto
function carregarDescricaoProjeto() {
  tituloEl.textContent = projetos[projetoIndex].titulo;
  descricaoEl.innerHTML = projetos[projetoIndex].descricao;
}

// Atualiza o slide para a imagem no √≠ndice atual
function updateSlide() {
  slide.style.transition = 'transform 0.4s ease-in-out';
  slide.style.transform = `translateX(${-slideIndex * 100}%)`;
}

// Navega para pr√≥xima imagem no slide
function nextSlide() {
  if (isAnimating) return;
  const totalImgs = projetos[projetoIndex].imagens.length;
  isAnimating = true;
  slideIndex++;
  if (slideIndex >= totalImgs) slideIndex = 0;
  updateSlide();
  setTimeout(() => {
    isAnimating = false;
  }, 400);
}

// Navega para imagem anterior no slide
function prevSlide() {
  if (isAnimating) return;
  const totalImgs = projetos[projetoIndex].imagens.length;
  isAnimating = true;
  slideIndex--;
  if (slideIndex < 0) slideIndex = totalImgs - 1;
  updateSlide();
  setTimeout(() => {
    isAnimating = false;
  }, 400);
}

// Carrega um projeto completo (imagens + descri√ß√£o)
function carregarProjeto(index) {
  if (index < 0) projetoIndex = projetos.length - 1;
  else if (index >= projetos.length) projetoIndex = 0;
  else projetoIndex = index;

  carregarDescricaoProjeto();
  carregarImagensProjeto();
}

// Eventos dos bot√µes do slide (imagens)
nextBtn.addEventListener('click', nextSlide);
prevBtn.addEventListener('click', prevSlide);

// Eventos dos bot√µes de navega√ß√£o dos projetos
document.getElementById('next-project').addEventListener('click', () => {
  carregarProjeto(projetoIndex + 1);
});
document.getElementById('prev-project').addEventListener('click', () => {
  carregarProjeto(projetoIndex - 1);
});

// Bot√£o voltar ao topo
window.addEventListener('scroll', () => {
  if (window.scrollY > 300) backToTop.style.display = 'block';
  else backToTop.style.display = 'none';
});

backToTop.addEventListener('click', () => {
  window.scrollTo({ top: 0, behavior: 'smooth' });
});

// Inicializa p√°gina com o primeiro projeto carregado
carregarProjeto(projetoIndex);
